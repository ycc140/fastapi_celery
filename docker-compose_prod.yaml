version: "3.9"

services:

  api:
    build:
      context: .
      args:
        BUILD_ENV: prod
    container_name: celery_service
    command: [ gunicorn, -w=2, -k=uvicorn.workers.UvicornWorker, -b=:7000,
               --log-config=gunicorn.conf, --worker-tmp-dir=/dev/shm, src.main:app,
               --certfile=certs/public-cert.pem, --keyfile=certs/private-key.pem ]
    restart: always
    ports:
      - "8200:7000"
    secrets:
      - mongo_url_prod
      - service_api_key
      - rabbit_url_root_prod
    depends_on:
      - dashboard
      - worker
    environment:
      - ENVIRONMENT=prod
    networks:
      - service_net

  worker:
    build:
      context: .
      args:
        BUILD_ENV: prod
    container_name: celery_worker
    command: [ celery, --app=src.tasks, worker, --loglevel=info, --task-events ]
    restart: always
    secrets:
      - mongo_url_prod
      - service_api_key
      - rabbit_url_root_prod
    environment:
      - ENVIRONMENT=prod
    networks:
      - service_net

  dashboard:
    build:
      context: .
      dockerfile: Dockerfile.flower
    container_name: celery_dashboard
    command: [ celery, --broker=amqp://guest:guest@rabbitmq/%2F,
               flower, --broker-api=http://guest:guest@rabbitmq:15672/api/ ]
    restart: always
    ports:
      - "5555:5555"
    environment:
      - FLOWER_UNAUTHENTICATED_API=true
    networks:
      - service_net

secrets:
  service_api_key:
    file: C:/Users/ander/AppData/Roaming/Python/secrets/service_api_key
  mongo_url_prod:
    file: C:/Users/ander/AppData/Roaming/Python/secrets/mongo_url_prod
  rabbit_url_root_prod:
    file: C:/Users/ander/AppData/Roaming/Python/secrets/rabbit_url_root_prod

networks:
  service_net:
    external: true
    name: custom_network
